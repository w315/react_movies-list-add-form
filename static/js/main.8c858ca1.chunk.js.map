{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/TextField/TextField.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","rel","target","MoviesList","movies","map","imdbId","TextField","name","value","label","placeholder","submit","isUrl","onChange","setError","link","required","useState","Math","random","toFixed","slice","id","touched","setTouched","url","setUrl","urlVerification","htmlFor","type","classNames","event","length","onBlur","NewMovie","onAdd","count","setSubmit","setTitle","titleErr","setTitleErr","setDescription","setImgUrl","imgUrlErr","setImgUrlErr","setImdbUrl","imdbUrlErr","setImdbUrlErr","setImdbId","imdbIdErr","setImdbIdErr","pattern","isLink","text","match","onSubmit","preventDefault","disabled","App","moviesFromServer","setMovies","newMovie","currMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8c858ca1.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movie-card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a\n          href={movie.imdbUrl}\n          rel=\"noreferrer\"\n          target=\"_blank\"\n        >\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\n\ntype Props = {\n  name: string,\n  value: string,\n  label?: string,\n  placeholder?: string,\n  submit?: boolean,\n  isUrl?: (newValue: string) => boolean,\n  onChange?: (newValue: string) => void,\n  setError?: (newValue: boolean) => void,\n  link?: boolean,\n  required?: boolean,\n};\n\nfunction getRandomDigits() {\n  return Math.random()\n    .toFixed(16)\n    .slice(2);\n}\n\nexport const TextField: React.FC<Props> = ({\n  name,\n  value,\n  label = name,\n  placeholder = `Enter ${label}`,\n  submit = false,\n  isUrl = () => { },\n  onChange = () => { },\n  setError = () => { },\n  link = false,\n  required = false,\n}) => {\n  const [id] = useState(() => `${name}-${getRandomDigits()}`);\n\n  const [touched, setTouched] = useState(false);\n\n  const [url, setUrl] = useState('');\n\n  const urlVerification = isUrl(url) as boolean;\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n\n      <div className=\"control\">\n        <input\n          type=\"text\"\n          id={id}\n          data-cy={`movie-${name}`}\n          className={classNames('input', {\n            'is-danger': link\n              ? (touched && !urlVerification && required && !submit)\n              : touched && required && !value && !submit,\n          })}\n          placeholder={placeholder}\n          value={value}\n          onChange={event => {\n            if (event.target.value.length === 0) {\n              setError(false);\n            }\n\n            onChange(event.target.value);\n\n            if (link) {\n              setUrl(event.target.value);\n            }\n          }}\n          onBlur={() => {\n            setTouched(true);\n          }}\n        />\n      </div>\n\n      {((touched && value && !urlVerification && link && !submit)) && (\n        <p className=\"help is-danger\">{`${label} is not a link`}</p>\n      )}\n\n      {(touched && !value && required && !submit) && (\n        <p className=\"help is-danger\">{`${label} is required`}</p>\n      )}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { TextField } from '../TextField';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  onAdd: (movie: Movie) => void;\n}\n\nexport const NewMovie: React.FC<Props> = ({ onAdd }) => {\n  const [count] = useState(0);\n\n  const [submit, setSubmit] = useState(false);\n\n  const [title, setTitle] = useState('');\n  const [titleErr, setTitleErr] = useState(false);\n\n  const [description, setDescription] = useState('');\n\n  const [imgUrl, setImgUrl] = useState('');\n  const [imgUrlErr, setImgUrlErr] = useState(false);\n\n  const [imdbUrl, setImdbUrl] = useState('');\n  const [imdbUrlErr, setImdbUrlErr] = useState(false);\n\n  const [imdbId, setImdbId] = useState('');\n  const [imdbIdErr, setImdbIdErr] = useState(false);\n\n  const reset = () => {\n    setTitleErr(false);\n    setImgUrlErr(false);\n    setImdbUrlErr(false);\n    setImdbIdErr(false);\n\n    setTitle('');\n    setDescription('');\n    setImgUrl('');\n    setImdbUrl('');\n    setImdbId('');\n\n    setSubmit(false);\n  };\n\n  // eslint-disable-next-line max-len\n  const pattern = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@,.\\w_]*)#?(?:[,.!/\\\\\\w]*))?)$/;\n\n  const isLink = (text: string) => {\n    return !text ? false : !!text.match(pattern);\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (!title || !imgUrl || !imdbUrl || !imdbId) {\n      if (!title) {\n        setTitleErr(true);\n      }\n\n      if (!imgUrl) {\n        setImgUrlErr(true);\n      } else if (isLink(imgUrl)) {\n        setImgUrlErr(true);\n      }\n\n      if (!imdbUrl) {\n        setImdbUrlErr(true);\n      } else if (isLink(imdbUrl)) {\n        setImdbUrlErr(true);\n      }\n\n      if (!imdbId) {\n        setImdbIdErr(true);\n      }\n\n      return;\n    }\n\n    onAdd({\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    });\n\n    reset();\n    setSubmit(true);\n  };\n\n  return (\n    <form\n      className=\"NewMovie\"\n      key={count}\n      onSubmit={handleSubmit}\n    >\n      <h2 className=\"title\">Add a movie</h2>\n\n      <TextField\n        name=\"title\"\n        value={title}\n        label=\"Title\"\n        submit={submit}\n        onChange={setTitle}\n        setError={setTitleErr}\n        required\n      />\n\n      <TextField\n        name=\"description\"\n        value={description}\n        label=\"Description\"\n        onChange={setDescription}\n      />\n\n      <TextField\n        name=\"imgUrl\"\n        value={imgUrl}\n        label=\"Image URL\"\n        submit={submit}\n        isUrl={isLink}\n        onChange={setImgUrl}\n        setError={setImgUrlErr}\n        link\n        required\n      />\n\n      <TextField\n        name=\"imdbUrl\"\n        value={imdbUrl}\n        label=\"Imdb URL\"\n        submit={submit}\n        isUrl={isLink}\n        onChange={setImdbUrl}\n        setError={setImdbUrlErr}\n        link\n        required\n      />\n\n      <TextField\n        name=\"imdbId\"\n        value={imdbId}\n        label=\"Imdb ID\"\n        onChange={setImdbId}\n        setError={setImdbIdErr}\n        submit={submit}\n        required\n      />\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            data-cy=\"submit-button\"\n            className=\"button is-link\"\n            disabled={\n              titleErr\n              || imgUrlErr\n              || imdbUrlErr\n              || imdbIdErr\n              || !isLink(imgUrl)\n              || !isLink(imdbUrl)\n            }\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import './App.scss';\nimport { useState } from 'react';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>(moviesFromServer);\n\n  const addMovie = (newMovie: Movie) => {\n    setMovies(currMovies => [...currMovies, newMovie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie onAdd={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}